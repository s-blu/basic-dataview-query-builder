import{k as h,m as p,_ as y,r as f,o as u,b as m,d as n,F as b,j as w,c as v,w as g,n as q,t as k,g as O,p as I,f as _}from"./index.66ade20d.js";const N=[{question:"In which form you want to see the results of your query?",answers:[{label:"I want to have a LIST of file links matching my query",dataview:"LIST",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#list-queries"},{label:"I want to have a TABLE that presents my results as file links with additional data for each hit",dataview:"TABLE {{tablecolumns}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#table-queries",extras:[{type:"hint",message:"Please give a comma separated list of meta data you would like to see in your table alongside the file link of your hit (or the group key, if you later decide to group). "},{type:"hint",title:"Meta data keys with spaces",message:"If your meta data key contain spaces, you cannot use it as-is. It won't get recognized. Please replace all spaces with dashes and write it lower case, i.e. if your key is 'Todays Good Deeds', use 'todays-good-deeds' in dataview queries."},{type:"input",label:"Table columns (comma separated)",varname:"tablecolumns"}]},{label:"I want to have an interactive TASK list that summarises my tasks",dataview:"TASK",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#task-queries"},{type:"input",label:"I want to see a CALENDAR which shows each hit as a dot",dataview:"CALENDAR {{datefield}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#calendar-queries",extras:[{type:"hint",message:"Each page that should be displayed with a CALENDAR view needs a valid date meta data field. Otherwise, the query won't render. Good picks are i.e. file.ctime or file.mtime. The date meta data field determines on which day the note gets displayed."},{type:"input",label:"Which date field should be used?",variabletype:"metadata",varname:"datefield"}]}]},{question:"Do you want to include all notes in your vault or just those from a particular folder/tag/link?",answers:[{label:"I want to query all notes",dataview:""},{label:"I only want to query notes that have a particular tag",dataview:"FROM #{{tagName}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from",extras:[{type:"input",label:"Name of the tag: #",varname:"tagName"}]},{label:"I only want to query notes inside a specific root-level folder (and its subfolders)",dataview:'FROM "{{folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from",extras:[{type:"input",label:"Name of the folder",varname:"folderName"}]},{label:"I only want to query notes inside a specific subfolder",dataview:'FROM "{{path/to/folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from",extras:[{type:"input",label:"Path to folder from vault root",varname:"path/to/folderName"}]},{label:"I only want to query notes that link to my current note",dataview:"FROM [[]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from"},{label:"I only want to query notes that my current note links to",dataview:"FROM outgoing([[]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from"},{label:"I only want to query notes that link to a specific note",dataview:"FROM [[{{NoteName}}]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]},{label:"I only want to query notes that are linked to from a specific note",dataview:"FROM outgoing([[{{NoteName}}]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]}]},{question:"Do you want to filter your results further based on one of your metadata fields?",answers:[{label:"No, I want to see all notes returned by my FROM statement",dataview:""},{label:"Yes, I only want to see notes where a particular field exists",dataview:"WHERE {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#where",extras:[{type:"input",label:"Name of field",varname:"nameOfField"}]},{label:"I only want to see notes where a particular field equals a certain value (number, string, date, etc)",dataview:'WHERE {{nameOfField}} = "{{value}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#where",extras:[{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfField"},{type:"input",label:"Value to check for",varname:"value"}]},{label:"I only want to see notes where a particular field contains certain value (inside an array, or as part of a string)",dataview:'WHERE contains({{nameOfMetadata}}, "{{value}}")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/functions/#containsobjectliststring-value",extras:[{type:"hint",message:"Using the contains function allows you to either search for a substring in texts, i.e. it'll find 'Lorem ipsum' if you search for 'Lor' or to search a multi-value field for one element. Hit the ? on the answer to read more about contains()."},{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfMetadata"},{type:"input",label:"Value to check for",varname:"value"}]}]},{question:"How do you want the results sorted?",answers:[{label:"Ascending after file path or group key, if I choose to group next (default behaviour)",dataview:""},{label:"Based on the note name, in alphabetical order",dataview:"SORT file.name asc",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#sort"},{label:"Based on the note's creation date, newest to oldest",dataview:"SORT file.ctime desc",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#sort"},{label:"Based on my own metadata field, in ascending order",dataview:"SORT {{nameOfField}} asc",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/functions/#sort",extras:[{type:"input",label:"Field name to sort after",variabletype:"metadata",varname:"nameOfField"}]},{label:"Based on my own metadata field, in descending order",dataview:"SORT {{nameOfField}} desc",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/functions/#sort",extras:[{type:"input",label:"Field name to sort after",variabletype:"metadata",varname:"nameOfField"}]}]},{question:"Do you want similar results grouped together based on one of their metadata values?",answers:[{label:"No, I want one result line per note",dataview:""},{label:"Yes, based on the file they came from (default behaviour, except on TASK queries)",dataview:"GROUP BY file.link",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#group",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Yes, based on the month they were created.",dataview:'GROUP BY dateformat(file.ctime, "yyyy-MM") AS Created',readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#group",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Yes, based on my own metadata field",dataview:"GROUP BY {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/functions/#group",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]}]},{question:"Do you want every result, or just the first few matches?",answers:[{label:"Show me everything",dataview:""},{label:"Just the first few matching results",dataview:"LIMIT {{numberOfResults}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/#limit",extras:[{type:"input",label:"Limit count",varname:"numberOfResults"}]}]}];function R(e){var a,i;if(!((a=e.selected)!=null&&a.variables)||!((i=e.selected)!=null&&i.dataview))return e;e.selected.dataview=e.selected.rawDataview;const t=e.selected.dataview.matchAll(/{{([^}]+)?}}/g);for(const r of t){const s=e.selected.variables[r[1]];s&&(e.selected.dataview=e.selected.dataview.replace(r[0],s))}return e}function x(e){let t;if(e.forEach((i,r)=>{var s;(s=i.selected)!=null&&s.dataview.includes("GROUP BY")&&(t=r)}),!t)return;a(e[0]);for(let i=t+1;i<e.length;i++)a(e[i]);function a(i){if(!i.selected)return;const r=i.selected.dataview.split(","),s=r[0].split(" ")[0];if(r[0]=r[0].replace(s,""),s==="LIMIT")return;const d=[];for(let o=0;o<r.length;o++){r[o]=r[o].trim();const l=r[o]&&!r[o].startsWith("rows.")?"rows.":"";d.push(l+r[o])}i.selected.dataview=s+d.reduce((o,l)=>`${o}${o?",":""} ${l}`,"")}}const S=h("questionsStore",{state:()=>({questions:N}),getters:{queryParts:e=>e.questions.filter(t=>{var a;return(a=t.selected)==null?void 0:a.dataview}).map(t=>{var a;return(a=t.selected)==null?void 0:a.dataview}),questionsLength:e=>e.questions.length,computedQueryParts:e=>{const t=e.questions.map(a=>R(a));return x(t),t.map(a=>{var i;return((i=a.selected)==null?void 0:i.dataview)||""})},computedQuery:e=>e.computedQueryParts.reduce((t,a)=>a?`${t}${t?`
`:""}${a}`:t,"")},actions:{resetSelectedAnswers(){this.questions.forEach(e=>e.selected=void 0)},setSelected(e,t,a){e.selected={index:t,answer:a,dataview:a.dataview,rawDataview:a.dataview}},updateAnswerVariableMap(e,t,a){var i;e.selected||console.error("Cannot update variable map for non existing selected answer",e),(i=e.selected)!=null&&i.variables||(e.selected.variables={}),e.selected.variables[t]=a}}}),F={computed:{...p(S,["queryParts","computedQuery","computedQueryParts"]),queryString(){return`\`\`\`dataview
${this.computedQuery}
\`\`\``},queryParts(){return this.computedQueryParts.length<Number(this.$route.params.id)?(console.log([...this.computedQueryParts,""]),[...this.computedQueryParts,""]):this.computedQueryParts}},methods:{copyQuery(){navigator.clipboard.writeText(this.queryString)}}};const c=e=>(I("data-v-a82c470c"),e=e(),_(),e),P={class:"dataview-query"},B=c(()=>n("span",{class:"icon"},[n("i",{class:"fa-regular fa-copy"})],-1)),Q=[B],T=c(()=>n("p",null,"```dataview",-1)),A=c(()=>n("p",null,"```",-1));function D(e,t,a,i,r,s){const d=f("container");return u(),m("div",P,[n("button",{class:"button is-ghost copybtn",title:"Copy Query",onClick:t[0]||(t[0]=o=>s.copyQuery())},Q),T,(u(!0),m(b,null,w(s.queryParts,(o,l)=>(u(),v(d,{key:l},{default:g(()=>[o?(u(),m("p",{key:0,class:q({active:Number(e.$route.params.id)===l+1})},k(o),3)):O("",!0)]),_:2},1024))),128)),A])}const E=y(F,[["render",D],["__scopeId","data-v-a82c470c"]]);export{E as D,S as u};
