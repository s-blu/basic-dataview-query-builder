import{k as va,m as _a,_ as xa,a as L,e as R,F as $e,i as Ta,o as j,n as Oa,t as Aa,g as Ia}from"./index-BeP7MhMA.js";var M=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function ka(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var Y={exports:{}};Y.exports;(function(r,i){var o=200,s="__lodash_hash_undefined__",u=9007199254740991,l="[object Arguments]",h="[object Array]",c="[object Boolean]",T="[object Date]",Ve="[object Error]",H="[object Function]",ie="[object GeneratorFunction]",B="[object Map]",oe="[object Number]",$="[object Object]",se="[object Promise]",le="[object RegExp]",C="[object Set]",ue="[object String]",de="[object Symbol]",W="[object WeakMap]",ce="[object ArrayBuffer]",E="[object DataView]",fe="[object Float32Array]",he="[object Float64Array]",pe="[object Int8Array]",me="[object Int16Array]",ge="[object Int32Array]",be="[object Uint8Array]",ye="[object Uint8ClampedArray]",we="[object Uint16Array]",ve="[object Uint32Array]",ze=/[\\^$.*+?()[\]{}|]/g,Ze=/\w*$/,Je=/^\[object .+?Constructor\]$/,Xe=/^(?:0|[1-9]\d*)$/,d={};d[l]=d[h]=d[ce]=d[E]=d[c]=d[T]=d[fe]=d[he]=d[pe]=d[me]=d[ge]=d[B]=d[oe]=d[$]=d[le]=d[C]=d[ue]=d[de]=d[be]=d[ye]=d[we]=d[ve]=!0,d[Ve]=d[H]=d[W]=!1;var et=typeof M=="object"&&M&&M.Object===Object&&M,tt=typeof self=="object"&&self&&self.Object===Object&&self,g=et||tt||Function("return this")(),_e=i&&!i.nodeType&&i,xe=_e&&!0&&r&&!r.nodeType&&r,at=xe&&xe.exports===_e;function rt(e,t){return e.set(t[0],t[1]),e}function nt(e,t){return e.add(t),e}function it(e,t){for(var a=-1,n=e?e.length:0;++a<n&&t(e[a],a,e)!==!1;);return e}function ot(e,t){for(var a=-1,n=t.length,f=e.length;++a<n;)e[f+a]=t[a];return e}function Te(e,t,a,n){for(var f=-1,p=e?e.length:0;++f<p;)a=t(a,e[f],f,e);return a}function st(e,t){for(var a=-1,n=Array(e);++a<e;)n[a]=t(a);return n}function lt(e,t){return e==null?void 0:e[t]}function Oe(e){var t=!1;if(e!=null&&typeof e.toString!="function")try{t=!!(e+"")}catch{}return t}function Ae(e){var t=-1,a=Array(e.size);return e.forEach(function(n,f){a[++t]=[f,n]}),a}function K(e,t){return function(a){return e(t(a))}}function Ie(e){var t=-1,a=Array(e.size);return e.forEach(function(n){a[++t]=n}),a}var ut=Array.prototype,dt=Function.prototype,G=Object.prototype,V=g["__core-js_shared__"],ke=function(){var e=/[^.]+$/.exec(V&&V.keys&&V.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),Se=dt.toString,w=G.hasOwnProperty,F=G.toString,ct=RegExp("^"+Se.call(w).replace(ze,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pe=at?g.Buffer:void 0,Re=g.Symbol,Be=g.Uint8Array,ft=K(Object.getPrototypeOf,Object),ht=Object.create,pt=G.propertyIsEnumerable,mt=ut.splice,Ce=Object.getOwnPropertySymbols,gt=Pe?Pe.isBuffer:void 0,bt=K(Object.keys,Object),z=I(g,"DataView"),S=I(g,"Map"),Z=I(g,"Promise"),J=I(g,"Set"),X=I(g,"WeakMap"),P=I(Object,"create"),yt=x(z),wt=x(S),vt=x(Z),_t=x(J),xt=x(X),Ee=Re?Re.prototype:void 0,Ge=Ee?Ee.valueOf:void 0;function v(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function Tt(){this.__data__=P?P(null):{}}function Ot(e){return this.has(e)&&delete this.__data__[e]}function At(e){var t=this.__data__;if(P){var a=t[e];return a===s?void 0:a}return w.call(t,e)?t[e]:void 0}function It(e){var t=this.__data__;return P?t[e]!==void 0:w.call(t,e)}function kt(e,t){var a=this.__data__;return a[e]=P&&t===void 0?s:t,this}v.prototype.clear=Tt,v.prototype.delete=Ot,v.prototype.get=At,v.prototype.has=It,v.prototype.set=kt;function b(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function St(){this.__data__=[]}function Pt(e){var t=this.__data__,a=N(t,e);if(a<0)return!1;var n=t.length-1;return a==n?t.pop():mt.call(t,a,1),!0}function Rt(e){var t=this.__data__,a=N(t,e);return a<0?void 0:t[a][1]}function Bt(e){return N(this.__data__,e)>-1}function Ct(e,t){var a=this.__data__,n=N(a,e);return n<0?a.push([e,t]):a[n][1]=t,this}b.prototype.clear=St,b.prototype.delete=Pt,b.prototype.get=Rt,b.prototype.has=Bt,b.prototype.set=Ct;function O(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function Et(){this.__data__={hash:new v,map:new(S||b),string:new v}}function Gt(e){return Q(this,e).delete(e)}function Ft(e){return Q(this,e).get(e)}function Nt(e){return Q(this,e).has(e)}function Qt(e,t){return Q(this,e).set(e,t),this}O.prototype.clear=Et,O.prototype.delete=Gt,O.prototype.get=Ft,O.prototype.has=Nt,O.prototype.set=Qt;function A(e){this.__data__=new b(e)}function qt(){this.__data__=new b}function Dt(e){return this.__data__.delete(e)}function Lt(e){return this.__data__.get(e)}function jt(e){return this.__data__.has(e)}function Mt(e,t){var a=this.__data__;if(a instanceof b){var n=a.__data__;if(!S||n.length<o-1)return n.push([e,t]),this;a=this.__data__=new O(n)}return a.set(e,t),this}A.prototype.clear=qt,A.prototype.delete=Dt,A.prototype.get=Lt,A.prototype.has=jt,A.prototype.set=Mt;function Ut(e,t){var a=ae(e)||ha(e)?st(e.length,String):[],n=a.length,f=!!n;for(var p in e)w.call(e,p)&&!(f&&(p=="length"||ua(p,n)))&&a.push(p);return a}function Fe(e,t,a){var n=e[t];(!(w.call(e,t)&&De(n,a))||a===void 0&&!(t in e))&&(e[t]=a)}function N(e,t){for(var a=e.length;a--;)if(De(e[a][0],t))return a;return-1}function Yt(e,t){return e&&Ne(t,re(t),e)}function ee(e,t,a,n,f,p,y){var m;if(n&&(m=p?n(e,f,p,y):n(e)),m!==void 0)return m;if(!q(e))return e;var Me=ae(e);if(Me){if(m=oa(e),!t)return ra(e,m)}else{var k=_(e),Ue=k==H||k==ie;if(ma(e))return zt(e,t);if(k==$||k==l||Ue&&!p){if(Oe(e))return p?e:{};if(m=sa(Ue?{}:e),!t)return na(e,Yt(m,e))}else{if(!d[k])return p?e:{};m=la(e,k,ee,t)}}y||(y=new A);var Ye=y.get(e);if(Ye)return Ye;if(y.set(e,m),!Me)var He=a?ia(e):re(e);return it(He||e,function(ne,D){He&&(D=ne,ne=e[D]),Fe(m,D,ee(ne,t,a,n,D,e,y))}),m}function Ht(e){return q(e)?ht(e):{}}function $t(e,t,a){var n=t(e);return ae(e)?n:ot(n,a(e))}function Wt(e){return F.call(e)}function Kt(e){if(!q(e)||ca(e))return!1;var t=je(e)||Oe(e)?ct:Je;return t.test(x(e))}function Vt(e){if(!qe(e))return bt(e);var t=[];for(var a in Object(e))w.call(e,a)&&a!="constructor"&&t.push(a);return t}function zt(e,t){if(t)return e.slice();var a=new e.constructor(e.length);return e.copy(a),a}function te(e){var t=new e.constructor(e.byteLength);return new Be(t).set(new Be(e)),t}function Zt(e,t){var a=t?te(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.byteLength)}function Jt(e,t,a){var n=t?a(Ae(e),!0):Ae(e);return Te(n,rt,new e.constructor)}function Xt(e){var t=new e.constructor(e.source,Ze.exec(e));return t.lastIndex=e.lastIndex,t}function ea(e,t,a){var n=t?a(Ie(e),!0):Ie(e);return Te(n,nt,new e.constructor)}function ta(e){return Ge?Object(Ge.call(e)):{}}function aa(e,t){var a=t?te(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.length)}function ra(e,t){var a=-1,n=e.length;for(t||(t=Array(n));++a<n;)t[a]=e[a];return t}function Ne(e,t,a,n){a||(a={});for(var f=-1,p=t.length;++f<p;){var y=t[f],m=void 0;Fe(a,y,m===void 0?e[y]:m)}return a}function na(e,t){return Ne(e,Qe(e),t)}function ia(e){return $t(e,re,Qe)}function Q(e,t){var a=e.__data__;return da(t)?a[typeof t=="string"?"string":"hash"]:a.map}function I(e,t){var a=lt(e,t);return Kt(a)?a:void 0}var Qe=Ce?K(Ce,Object):ya,_=Wt;(z&&_(new z(new ArrayBuffer(1)))!=E||S&&_(new S)!=B||Z&&_(Z.resolve())!=se||J&&_(new J)!=C||X&&_(new X)!=W)&&(_=function(e){var t=F.call(e),a=t==$?e.constructor:void 0,n=a?x(a):void 0;if(n)switch(n){case yt:return E;case wt:return B;case vt:return se;case _t:return C;case xt:return W}return t});function oa(e){var t=e.length,a=e.constructor(t);return t&&typeof e[0]=="string"&&w.call(e,"index")&&(a.index=e.index,a.input=e.input),a}function sa(e){return typeof e.constructor=="function"&&!qe(e)?Ht(ft(e)):{}}function la(e,t,a,n){var f=e.constructor;switch(t){case ce:return te(e);case c:case T:return new f(+e);case E:return Zt(e,n);case fe:case he:case pe:case me:case ge:case be:case ye:case we:case ve:return aa(e,n);case B:return Jt(e,n,a);case oe:case ue:return new f(e);case le:return Xt(e);case C:return ea(e,n,a);case de:return ta(e)}}function ua(e,t){return t=t??u,!!t&&(typeof e=="number"||Xe.test(e))&&e>-1&&e%1==0&&e<t}function da(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function ca(e){return!!ke&&ke in e}function qe(e){var t=e&&e.constructor,a=typeof t=="function"&&t.prototype||G;return e===a}function x(e){if(e!=null){try{return Se.call(e)}catch{}try{return e+""}catch{}}return""}function fa(e){return ee(e,!0,!0)}function De(e,t){return e===t||e!==e&&t!==t}function ha(e){return pa(e)&&w.call(e,"callee")&&(!pt.call(e,"callee")||F.call(e)==l)}var ae=Array.isArray;function Le(e){return e!=null&&ga(e.length)&&!je(e)}function pa(e){return ba(e)&&Le(e)}var ma=gt||wa;function je(e){var t=q(e)?F.call(e):"";return t==H||t==ie}function ga(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=u}function q(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function ba(e){return!!e&&typeof e=="object"}function re(e){return Le(e)?Ut(e):Vt(e)}function ya(){return[]}function wa(){return!1}r.exports=fa})(Y,Y.exports);var Sa=Y.exports;const Pa=ka(Sa),Ra=[{question:"How do you want to see the results of your query?",subtitle:"Query Type",answers:[{label:"I want to have a LIST of note links matching my query",dataview:"LIST",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list"},{label:"I want to have a TABLE of my note links with additional data as columns for each result",dataview:"TABLE {{tablecolumns}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#table",extras:[{type:"hint",message:"Please give a comma separated list of meta data that represents each column."},{type:"hint",title:"Meta data keys with spaces",message:"If your meta data key contain spaces, you cannot use it as-is. It won't get recognized. Please replace all spaces with dashes and write it lower case, i.e. if your key is 'Todays Good Deeds', use 'todays-good-deeds' in dataview queries."},{type:"input",label:"Table columns (comma separated)",varname:"tablecolumns"}]},{label:"I want to have a TASK list that summarizes my tasks",dataview:"TASK",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#task"},{type:"input",label:"I want to see a CALENDAR which shows each note as a dot",dataview:"CALENDAR {{datefield}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#calendar",extras:[{type:"hint",message:"Each note needs a valid date meta data field to show in CALENDAR view, otherwise the query won't render. Good picks are i.e. file.ctime or file.mtime. The date meta data field determines on which day the note gets displayed."},{type:"input",label:"Which date field should be used?",variabletype:"metadata",varname:"datefield"}]}]},{question:"Do you want to include all notes in your vault or only those from a particular source?",subtitle:"Page sources",answers:[{label:"I want to include all notes",dataview:""},{label:"I only want to show notes that have a particular tag",dataview:"FROM #{{tagName}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of the tag: #",varname:"tagName"}]},{label:"I only want to show notes inside a specific root-level folder (and its subfolders)",dataview:'FROM "{{folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of the folder",varname:"folderName"}]},{label:"I only want to show notes inside a specific subfolder",dataview:'FROM "{{path/to/folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"hint",message:"Give the path starting from and exclusive your vault folder, separated by slashes (/)"},{type:"input",label:"Path to folder from vault root",varname:"path/to/folderName"}]},{label:"I only want to show notes that link to my current note",dataview:"FROM [[]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from"},{label:"I only want to show notes that my current note links to",dataview:"FROM outgoing([[]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from"},{label:"I only want to show notes that link to a specific note",dataview:"FROM [[{{NoteName}}]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]},{label:"I only want to show notes that are linked to from a specific note",dataview:"FROM outgoing([[{{NoteName}}]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]}]},{question:"Do you want to filter your results further based on the notes metadata?",subtitle:"Filter pages",answers:[{label:"No, I want to see all notes returned by my FROM statement",dataview:""},{label:"I only want to see notes where a particular field exists",dataview:"WHERE {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#where",extras:[{type:"input",label:"Name of field",varname:"nameOfField"}]},{label:"I only want to see notes where a particular field equals a certain value (number, string, date, etc)",dataview:"WHERE {{nameOfField}} = ",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#where",extras:[{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfField"}]},{label:"I only want to see notes where a particular field contains certain value (inside an array, or as part of a string)",dataview:'WHERE contains({{nameOfMetadata}}, "{{value}}")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/functions/#containsobjectliststring-value",extras:[{type:"hint",message:"Using the contains function allows you to either search for a substring in texts, i.e. it'll find 'Lorem ipsum' if you search for 'Lor' or to search a multi-value field for one element. Hit the ? on the answer to read more about contains()."},{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfMetadata"},{type:"input",label:"Value to check for",varname:"value"}]}]},{question:"Against which value type you want to compare?",subtitle:"Field Type Compare",condition:"WHERE =",appendix:".-1",answers:[{label:"I want to compare to a number",dataview:"{{value}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Number to check against",varname:"value"}]},{label:"I want to compare to a text value",dataview:'"{{value}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Text to check against",varname:"value"}]},{label:"I want to compare to a date",dataview:'date("{{value}}")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/#dates",extras:[{type:"hint",message:"Specify the date you want to compare against in ISO format, i.e. 2020-05-30 or 2020-12-24T18:00. Click the ? icon on the answer option to see more input possibilities."},{type:"input",label:"Date to check against",varname:"value"}]},{label:"I want to compare to a note link",dataview:"[[{{value}}]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Name of file to check against",varname:"value"}]}]},{question:"How do you want the results sorted?",subtitle:"Sorting",answers:[{label:"Ascending after file path or group key, if I choose to group next (default behaviour)",dataview:""},{label:"Based on the note name",dataview:"SORT file.name",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Based on the note's creation date",dataview:"SORT file.ctime",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Based on my own metadata field",dataview:"SORT {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/functions/#sortlist",extras:[{type:"input",label:"Field name to sort after",variabletype:"metadata",varname:"nameOfField"}]}]},{question:"In which direction you want your results sorted?",subtitle:"Sort Direction",condition:"SORT",appendix:".-1",answers:[{label:"Ascending (A-Z, 0-9, oldest to newest)",dataview:"ASC",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Descending (Z-A, 9-0, newest to oldest)",dataview:"DESC",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"}]},{question:"Do you want similar results grouped together based on one of their metadata values?",subtitle:"Grouping",condition:"-TASK",answers:[{label:"No, I want one result line per note",dataview:""},{label:"Group based on the folder they belong to.",dataview:"GROUP BY file.folder",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the tags they have.",dataview:"FLATTEN file.etags AS tags GROUP BY tags",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"The tags of a file are a multivalue field. When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]},{label:"Group based on the month they were created.",dataview:'GROUP BY dateformat(file.ctime, "yyyy-MM")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own single value metadata field",dataview:"GROUP BY {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own multi value metadata field",dataview:"FLATTEN {{nameOfField}} AS groups GROUP BY groups",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]}]},{question:"Do you want similar results grouped together based on one of their metadata values?",subtitle:"Grouping",condition:"TASK",answers:[{label:"No, I want one result line per note",dataview:""},{label:"Yes, based on the file they came from",dataview:"GROUP BY file.link",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the folder they belong to.",dataview:"GROUP BY file.folder",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the tags they have.",dataview:"FLATTEN file.etags AS tags GROUP BY tags",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"The tags of a file are a multivalue field. When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]},{label:"Group based on the month they were created.",dataview:'GROUP BY dateformat(file.ctime, "yyyy-MM")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own single value metadata field",dataview:"GROUP BY {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own multi value metadata field",dataview:"FLATTEN {{nameOfField}} AS groups GROUP BY groups",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]}]},{question:"Do you want every result, or just the first few matches?",subtitle:"Set a limit",answers:[{label:"Show me everything",dataview:""},{label:"Show me only the first few matching results",dataview:"LIMIT {{numberOfResults}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#limit",extras:[{type:"input",label:"Limit count",varname:"numberOfResults"}]}]},{question:"Do you want to see an additional information alongside your file links on your LIST?",condition:"LIST -GROUP",appendix:"0",subtitle:"Additional List Field",answers:[{label:"No, I only want to see my file links",dataview:"",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list"},{label:"Show a meta data value alongside the file links",dataview:"{{listfield}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list",extras:[{type:"input",variabletype:"metadata",label:"Meta data to output",varname:"listfield"}]}]},{question:"Do you want to see an additional information alongside your groups on your LIST?",condition:"LIST GROUP",appendix:"0",subtitle:"Additional List Field",answers:[{label:"No, I only want to see my groups",dataview:"",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"},{label:"I want to see all note links belonging to this group",dataview:"file.link",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"},{label:"I want to see all note names belonging to this group",dataview:"file.name",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"}]}];function Ba(r){const i={mandatory:[],forbidden:[]};return!r||r.trim()===""||r.split(" ").forEach(s=>{let u="mandatory";s=s.trim(),s.startsWith("-")&&(u="forbidden",s=s.substring(1));const l=s.includes("~")?s.split("~"):s;i[u].push(l)}),i}function U(r,i){if(!i)return!0;const o=Ba(i),s=r.reduce((l,h)=>`${l} ${h}`,"");for(let l=0;l<o.forbidden.length;l++)if(u(o.forbidden[l]))return!1;for(let l=0;l<o.mandatory.length;l++)u(o.mandatory[l])&&(o.mandatory.splice(l,1),l--);return o.mandatory.length===0;function u(l){let h=!1;return Array.isArray(l)?h=l.some(c=>s.includes(c)):h=s.includes(l),h}}function We(r,i=!0){if(!r.selected)return r;if(r.appendix&&i)return r.selected.dataview="",r;if(!r.selected.variables)return r;const o=r.selected.rawDataview.matchAll(/{{([^}]+)?}}/g);let s=r.selected.rawDataview;for(const u of o){const l=r.selected.variables[u[1]];l&&(s=s.replace(u[0],l))}return r.selected.dataview=s,r}function Ca(r){if(!r.selected||!r.selected.appendixDataviews)return r;let i=r.selected.dataview;return r.selected.appendixDataviews&&r.selected.appendixDataviews.forEach(o=>{o&&(i+=" "+o)}),r.selected.dataview=i,r}function Ea(r,i){r&&r.forEach((o,s)=>{var l;if(!o.appendix||!o.selected)return;const u=Ke(o,s);if(o.condition&&!U(i,o.condition)){(l=r[u].selected)!=null&&l.appendixDataviews&&(r[u].selected.appendixDataviews[s]=null);return}We(o,!1),r[u].selected&&(r[u].selected.appendixDataviews||(r[u].selected.appendixDataviews=[]),r[u].selected.appendixDataviews[s]=o.selected.dataview)})}function Ke(r,i){if(!(r!=null&&r.appendix))return i;let o;if(r.appendix.startsWith(".")){const s=Number(r.appendix.substring(1));o=i+s}else o=Number(r.appendix);return o}function Ga(r){let i;if(r.forEach((s,u)=>{var l;(l=s.selected)!=null&&l.dataview.includes("GROUP BY")&&(i=u)}),!i)return;o(r[0]);for(let s=i+1;s<r.length;s++)o(r[s]);function o(s){if(!s.selected)return;const u=s.selected.dataview.split(","),l=u[0].split(" ")[0];if(u[0]=u[0].replace(l,""),l==="LIMIT")return;const h=[];for(let c=0;c<u.length;c++){u[c]=u[c].trim();const T=u[c]&&!u[c].startsWith("rows.")?"rows.":"";h.push(T+u[c])}s.selected.dataview=l+h.reduce((c,T)=>`${c}${c?",":""} ${T}`,"")}}const Fa=va("questionsStore",{state:()=>({questions:Ra,currentQuestionIndex:0}),getters:{currentQuestion:r=>r.questions[r.currentQuestionIndex],queryParts:r=>r.questions.filter(i=>{var o;return(o=i.selected)==null?void 0:o.dataview}).map(i=>{var o;return(o=i.selected)==null?void 0:o.dataview}),questionsLength:r=>r.questions.length,isLastQuestion:r=>{var o;if(!r.questions)return!1;if(r.currentQuestionIndex+1===r.questionsLength)return!0;let i=r.currentQuestionIndex;for(;i<r.questionsLength-1&&!U(r.queryParts,(o=r.questions[i])==null?void 0:o.condition);)i++;return i+1===r.questionsLength},computedQueryParts:r=>{const i=Pa(r.questions);Ea(i,r.queryParts);const o=i.map(s=>We(s)).map(s=>Ca(s));return Ga(o),o.map(s=>{var u;return((u=s.selected)==null?void 0:u.dataview)||""})},computedQuery:r=>r.computedQueryParts.reduce((i,o)=>o?`${i}${i?`
`:""}${o}`:i,"")},actions:{moveForward(){var i;let r=this.currentQuestionIndex+1;for(;!U(this.queryParts,(i=this.questions[r])==null?void 0:i.condition);)r++;return r<this.questionsLength?(this.currentQuestionIndex=r,!0):!1},moveBack(){if(this.currentQuestionIndex===0)return;let r=this.currentQuestionIndex-1;for(;!U(this.queryParts,this.questions[r].condition);)r--;this.currentQuestionIndex=r},resetAppState(){this.questions.forEach(r=>r.selected=void 0),this.currentQuestionIndex=0},setSelected(r,i,o){r.selected={index:i,answer:o,dataview:o.dataview,rawDataview:o.dataview}},updateAnswerVariableMap(r,i,o){var s;r.selected||console.error("Cannot update variable map for non existing selected answer",r),(s=r.selected)!=null&&s.variables||(r.selected.variables={}),r.selected.variables[i]=o}}}),Na={props:{showHighlight:String},computed:{..._a(Fa,["queryParts","computedQuery","computedQueryParts","currentQuestionIndex","currentQuestion"]),queryString(){return`\`\`\`dataview
${this.computedQuery.trim()}
\`\`\``},queryParts(){return this.showHighlight?this.computedQueryParts:this.computedQueryParts.filter(r=>r)},activeIndex(){return Ke(this.currentQuestion,this.currentQuestionIndex)}},methods:{copyQuery(){navigator.clipboard.writeText(this.queryString)}}},Qa={class:"dataview-query"};function qa(r,i,o,s,u,l){return j(),L("div",Qa,[R("button",{class:"button is-ghost copybtn",title:"Copy Query",onClick:i[0]||(i[0]=h=>l.copyQuery())},i[1]||(i[1]=[R("span",{class:"icon"},[R("i",{class:"fa-regular fa-copy"})],-1)])),i[2]||(i[2]=R("p",null,"```dataview",-1)),(j(!0),L($e,null,Ta(l.queryParts,(h,c)=>(j(),L($e,{key:c},[h?(j(),L("p",{key:0,class:Oa({active:l.activeIndex===c&&o.showHighlight})},Aa(h),3)):Ia("",!0)],64))),128)),i[3]||(i[3]=R("p",null,"```",-1))])}const La=xa(Na,[["render",qa],["__scopeId","data-v-670496d2"]]);export{La as D,Fa as u};
