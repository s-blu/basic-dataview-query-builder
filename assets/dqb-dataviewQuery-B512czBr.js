import{l as _a,m as xa,_ as Ta,a as L,e as R,F as We,j as Oa,o as j,n as Aa,t as Ia,g as ka,p as Sa,h as Pa}from"./index-Cr05IzbM.js";var M=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Ra(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var Y={exports:{}};Y.exports;(function(r,o){var i=200,s="__lodash_hash_undefined__",u=9007199254740991,l="[object Arguments]",h="[object Array]",c="[object Boolean]",T="[object Date]",ze="[object Error]",H="[object Function]",oe="[object GeneratorFunction]",B="[object Map]",se="[object Number]",$="[object Object]",le="[object Promise]",ue="[object RegExp]",C="[object Set]",de="[object String]",ce="[object Symbol]",W="[object WeakMap]",fe="[object ArrayBuffer]",E="[object DataView]",he="[object Float32Array]",pe="[object Float64Array]",me="[object Int8Array]",ge="[object Int16Array]",be="[object Int32Array]",ye="[object Uint8Array]",we="[object Uint8ClampedArray]",ve="[object Uint16Array]",_e="[object Uint32Array]",Ze=/[\\^$.*+?()[\]{}|]/g,Je=/\w*$/,Xe=/^\[object .+?Constructor\]$/,et=/^(?:0|[1-9]\d*)$/,d={};d[l]=d[h]=d[fe]=d[E]=d[c]=d[T]=d[he]=d[pe]=d[me]=d[ge]=d[be]=d[B]=d[se]=d[$]=d[ue]=d[C]=d[de]=d[ce]=d[ye]=d[we]=d[ve]=d[_e]=!0,d[ze]=d[H]=d[W]=!1;var tt=typeof M=="object"&&M&&M.Object===Object&&M,at=typeof self=="object"&&self&&self.Object===Object&&self,g=tt||at||Function("return this")(),xe=o&&!o.nodeType&&o,Te=xe&&!0&&r&&!r.nodeType&&r,rt=Te&&Te.exports===xe;function nt(e,t){return e.set(t[0],t[1]),e}function it(e,t){return e.add(t),e}function ot(e,t){for(var a=-1,n=e?e.length:0;++a<n&&t(e[a],a,e)!==!1;);return e}function st(e,t){for(var a=-1,n=t.length,f=e.length;++a<n;)e[f+a]=t[a];return e}function Oe(e,t,a,n){for(var f=-1,p=e?e.length:0;++f<p;)a=t(a,e[f],f,e);return a}function lt(e,t){for(var a=-1,n=Array(e);++a<e;)n[a]=t(a);return n}function ut(e,t){return e==null?void 0:e[t]}function Ae(e){var t=!1;if(e!=null&&typeof e.toString!="function")try{t=!!(e+"")}catch{}return t}function Ie(e){var t=-1,a=Array(e.size);return e.forEach(function(n,f){a[++t]=[f,n]}),a}function K(e,t){return function(a){return e(t(a))}}function ke(e){var t=-1,a=Array(e.size);return e.forEach(function(n){a[++t]=n}),a}var dt=Array.prototype,ct=Function.prototype,G=Object.prototype,V=g["__core-js_shared__"],Se=function(){var e=/[^.]+$/.exec(V&&V.keys&&V.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),Pe=ct.toString,w=G.hasOwnProperty,F=G.toString,ft=RegExp("^"+Pe.call(w).replace(Ze,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Re=rt?g.Buffer:void 0,Be=g.Symbol,Ce=g.Uint8Array,ht=K(Object.getPrototypeOf,Object),pt=Object.create,mt=G.propertyIsEnumerable,gt=dt.splice,Ee=Object.getOwnPropertySymbols,bt=Re?Re.isBuffer:void 0,yt=K(Object.keys,Object),z=I(g,"DataView"),S=I(g,"Map"),Z=I(g,"Promise"),J=I(g,"Set"),X=I(g,"WeakMap"),P=I(Object,"create"),wt=x(z),vt=x(S),_t=x(Z),xt=x(J),Tt=x(X),Ge=Be?Be.prototype:void 0,Fe=Ge?Ge.valueOf:void 0;function v(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function Ot(){this.__data__=P?P(null):{}}function At(e){return this.has(e)&&delete this.__data__[e]}function It(e){var t=this.__data__;if(P){var a=t[e];return a===s?void 0:a}return w.call(t,e)?t[e]:void 0}function kt(e){var t=this.__data__;return P?t[e]!==void 0:w.call(t,e)}function St(e,t){var a=this.__data__;return a[e]=P&&t===void 0?s:t,this}v.prototype.clear=Ot,v.prototype.delete=At,v.prototype.get=It,v.prototype.has=kt,v.prototype.set=St;function b(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function Pt(){this.__data__=[]}function Rt(e){var t=this.__data__,a=N(t,e);if(a<0)return!1;var n=t.length-1;return a==n?t.pop():gt.call(t,a,1),!0}function Bt(e){var t=this.__data__,a=N(t,e);return a<0?void 0:t[a][1]}function Ct(e){return N(this.__data__,e)>-1}function Et(e,t){var a=this.__data__,n=N(a,e);return n<0?a.push([e,t]):a[n][1]=t,this}b.prototype.clear=Pt,b.prototype.delete=Rt,b.prototype.get=Bt,b.prototype.has=Ct,b.prototype.set=Et;function O(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var n=e[t];this.set(n[0],n[1])}}function Gt(){this.__data__={hash:new v,map:new(S||b),string:new v}}function Ft(e){return Q(this,e).delete(e)}function Nt(e){return Q(this,e).get(e)}function Qt(e){return Q(this,e).has(e)}function qt(e,t){return Q(this,e).set(e,t),this}O.prototype.clear=Gt,O.prototype.delete=Ft,O.prototype.get=Nt,O.prototype.has=Qt,O.prototype.set=qt;function A(e){this.__data__=new b(e)}function Dt(){this.__data__=new b}function Lt(e){return this.__data__.delete(e)}function jt(e){return this.__data__.get(e)}function Mt(e){return this.__data__.has(e)}function Ut(e,t){var a=this.__data__;if(a instanceof b){var n=a.__data__;if(!S||n.length<i-1)return n.push([e,t]),this;a=this.__data__=new O(n)}return a.set(e,t),this}A.prototype.clear=Dt,A.prototype.delete=Lt,A.prototype.get=jt,A.prototype.has=Mt,A.prototype.set=Ut;function Yt(e,t){var a=ae(e)||pa(e)?lt(e.length,String):[],n=a.length,f=!!n;for(var p in e)w.call(e,p)&&!(f&&(p=="length"||da(p,n)))&&a.push(p);return a}function Ne(e,t,a){var n=e[t];(!(w.call(e,t)&&Le(n,a))||a===void 0&&!(t in e))&&(e[t]=a)}function N(e,t){for(var a=e.length;a--;)if(Le(e[a][0],t))return a;return-1}function Ht(e,t){return e&&Qe(t,re(t),e)}function ee(e,t,a,n,f,p,y){var m;if(n&&(m=p?n(e,f,p,y):n(e)),m!==void 0)return m;if(!q(e))return e;var Ue=ae(e);if(Ue){if(m=sa(e),!t)return na(e,m)}else{var k=_(e),Ye=k==H||k==oe;if(ga(e))return Zt(e,t);if(k==$||k==l||Ye&&!p){if(Ae(e))return p?e:{};if(m=la(Ye?{}:e),!t)return ia(e,Ht(m,e))}else{if(!d[k])return p?e:{};m=ua(e,k,ee,t)}}y||(y=new A);var He=y.get(e);if(He)return He;if(y.set(e,m),!Ue)var $e=a?oa(e):re(e);return ot($e||e,function(ne,D){$e&&(D=ne,ne=e[D]),Ne(m,D,ee(ne,t,a,n,D,e,y))}),m}function $t(e){return q(e)?pt(e):{}}function Wt(e,t,a){var n=t(e);return ae(e)?n:st(n,a(e))}function Kt(e){return F.call(e)}function Vt(e){if(!q(e)||fa(e))return!1;var t=Me(e)||Ae(e)?ft:Xe;return t.test(x(e))}function zt(e){if(!De(e))return yt(e);var t=[];for(var a in Object(e))w.call(e,a)&&a!="constructor"&&t.push(a);return t}function Zt(e,t){if(t)return e.slice();var a=new e.constructor(e.length);return e.copy(a),a}function te(e){var t=new e.constructor(e.byteLength);return new Ce(t).set(new Ce(e)),t}function Jt(e,t){var a=t?te(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.byteLength)}function Xt(e,t,a){var n=t?a(Ie(e),!0):Ie(e);return Oe(n,nt,new e.constructor)}function ea(e){var t=new e.constructor(e.source,Je.exec(e));return t.lastIndex=e.lastIndex,t}function ta(e,t,a){var n=t?a(ke(e),!0):ke(e);return Oe(n,it,new e.constructor)}function aa(e){return Fe?Object(Fe.call(e)):{}}function ra(e,t){var a=t?te(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.length)}function na(e,t){var a=-1,n=e.length;for(t||(t=Array(n));++a<n;)t[a]=e[a];return t}function Qe(e,t,a,n){a||(a={});for(var f=-1,p=t.length;++f<p;){var y=t[f],m=void 0;Ne(a,y,m===void 0?e[y]:m)}return a}function ia(e,t){return Qe(e,qe(e),t)}function oa(e){return Wt(e,re,qe)}function Q(e,t){var a=e.__data__;return ca(t)?a[typeof t=="string"?"string":"hash"]:a.map}function I(e,t){var a=ut(e,t);return Vt(a)?a:void 0}var qe=Ee?K(Ee,Object):wa,_=Kt;(z&&_(new z(new ArrayBuffer(1)))!=E||S&&_(new S)!=B||Z&&_(Z.resolve())!=le||J&&_(new J)!=C||X&&_(new X)!=W)&&(_=function(e){var t=F.call(e),a=t==$?e.constructor:void 0,n=a?x(a):void 0;if(n)switch(n){case wt:return E;case vt:return B;case _t:return le;case xt:return C;case Tt:return W}return t});function sa(e){var t=e.length,a=e.constructor(t);return t&&typeof e[0]=="string"&&w.call(e,"index")&&(a.index=e.index,a.input=e.input),a}function la(e){return typeof e.constructor=="function"&&!De(e)?$t(ht(e)):{}}function ua(e,t,a,n){var f=e.constructor;switch(t){case fe:return te(e);case c:case T:return new f(+e);case E:return Jt(e,n);case he:case pe:case me:case ge:case be:case ye:case we:case ve:case _e:return ra(e,n);case B:return Xt(e,n,a);case se:case de:return new f(e);case ue:return ea(e);case C:return ta(e,n,a);case ce:return aa(e)}}function da(e,t){return t=t??u,!!t&&(typeof e=="number"||et.test(e))&&e>-1&&e%1==0&&e<t}function ca(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function fa(e){return!!Se&&Se in e}function De(e){var t=e&&e.constructor,a=typeof t=="function"&&t.prototype||G;return e===a}function x(e){if(e!=null){try{return Pe.call(e)}catch{}try{return e+""}catch{}}return""}function ha(e){return ee(e,!0,!0)}function Le(e,t){return e===t||e!==e&&t!==t}function pa(e){return ma(e)&&w.call(e,"callee")&&(!mt.call(e,"callee")||F.call(e)==l)}var ae=Array.isArray;function je(e){return e!=null&&ba(e.length)&&!Me(e)}function ma(e){return ya(e)&&je(e)}var ga=bt||va;function Me(e){var t=q(e)?F.call(e):"";return t==H||t==oe}function ba(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=u}function q(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function ya(e){return!!e&&typeof e=="object"}function re(e){return je(e)?Yt(e):zt(e)}function wa(){return[]}function va(){return!1}r.exports=ha})(Y,Y.exports);var Ba=Y.exports;const Ca=Ra(Ba),Ea=[{question:"How do you want to see the results of your query?",subtitle:"Query Type",answers:[{label:"I want to have a LIST of note links matching my query",dataview:"LIST",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list"},{label:"I want to have a TABLE of my note links with additional data as columns for each result",dataview:"TABLE {{tablecolumns}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#table",extras:[{type:"hint",message:"Please give a comma separated list of meta data that represents each column."},{type:"hint",title:"Meta data keys with spaces",message:"If your meta data key contain spaces, you cannot use it as-is. It won't get recognized. Please replace all spaces with dashes and write it lower case, i.e. if your key is 'Todays Good Deeds', use 'todays-good-deeds' in dataview queries."},{type:"input",label:"Table columns (comma separated)",varname:"tablecolumns"}]},{label:"I want to have a TASK list that summarizes my tasks",dataview:"TASK",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#task"},{type:"input",label:"I want to see a CALENDAR which shows each note as a dot",dataview:"CALENDAR {{datefield}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#calendar",extras:[{type:"hint",message:"Each note needs a valid date meta data field to show in CALENDAR view, otherwise the query won't render. Good picks are i.e. file.ctime or file.mtime. The date meta data field determines on which day the note gets displayed."},{type:"input",label:"Which date field should be used?",variabletype:"metadata",varname:"datefield"}]}]},{question:"Do you want to include all notes in your vault or only those from a particular source?",subtitle:"Page sources",answers:[{label:"I want to include all notes",dataview:""},{label:"I only want to show notes that have a particular tag",dataview:"FROM #{{tagName}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of the tag: #",varname:"tagName"}]},{label:"I only want to show notes inside a specific root-level folder (and its subfolders)",dataview:'FROM "{{folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of the folder",varname:"folderName"}]},{label:"I only want to show notes inside a specific subfolder",dataview:'FROM "{{path/to/folderName}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"hint",message:"Give the path starting from and exclusive your vault folder, separated by slashes (/)"},{type:"input",label:"Path to folder from vault root",varname:"path/to/folderName"}]},{label:"I only want to show notes that link to my current note",dataview:"FROM [[]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from"},{label:"I only want to show notes that my current note links to",dataview:"FROM outgoing([[]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from"},{label:"I only want to show notes that link to a specific note",dataview:"FROM [[{{NoteName}}]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]},{label:"I only want to show notes that are linked to from a specific note",dataview:"FROM outgoing([[{{NoteName}}]])",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#from",extras:[{type:"input",label:"Name of note",varname:"NoteName"}]}]},{question:"Do you want to filter your results further based on the notes metadata?",subtitle:"Filter pages",answers:[{label:"No, I want to see all notes returned by my FROM statement",dataview:""},{label:"I only want to see notes where a particular field exists",dataview:"WHERE {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#where",extras:[{type:"input",label:"Name of field",varname:"nameOfField"}]},{label:"I only want to see notes where a particular field equals a certain value (number, string, date, etc)",dataview:"WHERE {{nameOfField}} = ",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#where",extras:[{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfField"}]},{label:"I only want to see notes where a particular field contains certain value (inside an array, or as part of a string)",dataview:'WHERE contains({{nameOfMetadata}}, "{{value}}")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/functions/#containsobjectliststring-value",extras:[{type:"hint",message:"Using the contains function allows you to either search for a substring in texts, i.e. it'll find 'Lorem ipsum' if you search for 'Lor' or to search a multi-value field for one element. Hit the ? on the answer to read more about contains()."},{type:"input",label:"Name of field",variabletype:"metadata",varname:"nameOfMetadata"},{type:"input",label:"Value to check for",varname:"value"}]}]},{question:"Against which value type you want to compare?",subtitle:"Field Type Compare",condition:"WHERE =",appendix:".-1",answers:[{label:"I want to compare to a number",dataview:"{{value}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Number to check against",varname:"value"}]},{label:"I want to compare to a text value",dataview:'"{{value}}"',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Text to check against",varname:"value"}]},{label:"I want to compare to a date",dataview:'date("{{value}}")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/#dates",extras:[{type:"hint",message:"Specify the date you want to compare against in ISO format, i.e. 2020-05-30 or 2020-12-24T18:00. Click the ? icon on the answer option to see more input possibilities."},{type:"input",label:"Date to check against",varname:"value"}]},{label:"I want to compare to a note link",dataview:"[[{{value}}]]",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/literals/",extras:[{type:"input",label:"Name of file to check against",varname:"value"}]}]},{question:"How do you want the results sorted?",subtitle:"Sorting",answers:[{label:"Ascending after file path or group key, if I choose to group next (default behaviour)",dataview:""},{label:"Based on the note name",dataview:"SORT file.name",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Based on the note's creation date",dataview:"SORT file.ctime",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Based on my own metadata field",dataview:"SORT {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/reference/functions/#sortlist",extras:[{type:"input",label:"Field name to sort after",variabletype:"metadata",varname:"nameOfField"}]}]},{question:"In which direction you want your results sorted?",subtitle:"Sort Direction",condition:"SORT",appendix:".-1",answers:[{label:"Ascending (A-Z, 0-9, oldest to newest)",dataview:"ASC",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"},{label:"Descending (Z-A, 9-0, newest to oldest)",dataview:"DESC",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#sort"}]},{question:"Do you want similar results grouped together based on one of their metadata values?",subtitle:"Grouping",condition:"-TASK",answers:[{label:"No, I want one result line per note",dataview:""},{label:"Group based on the folder they belong to.",dataview:"GROUP BY file.folder",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the tags they have.",dataview:"FLATTEN file.etags AS tags GROUP BY tags",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"The tags of a file are a multivalue field. When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]},{label:"Group based on the month they were created.",dataview:'GROUP BY dateformat(file.ctime, "yyyy-MM")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own single value metadata field",dataview:"GROUP BY {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own multi value metadata field",dataview:"FLATTEN {{nameOfField}} AS groups GROUP BY groups",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]}]},{question:"Do you want similar results grouped together based on one of their metadata values?",subtitle:"Grouping",condition:"TASK",answers:[{label:"No, I want one result line per note",dataview:""},{label:"Yes, based on the file they came from",dataview:"GROUP BY file.link",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the folder they belong to.",dataview:"GROUP BY file.folder",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on the tags they have.",dataview:"FLATTEN file.etags AS tags GROUP BY tags",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"The tags of a file are a multivalue field. When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]},{label:"Group based on the month they were created.",dataview:'GROUP BY dateformat(file.ctime, "yyyy-MM")',readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own single value metadata field",dataview:"GROUP BY {{nameOfField}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."}]},{label:"Group based on my own multi value metadata field",dataview:"FLATTEN {{nameOfField}} AS groups GROUP BY groups",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by",extras:[{type:"input",label:"Field name to group after",variabletype:"metadata",varname:"nameOfField"},{type:"hint",message:"After grouping, you need to prepend a 'rows.' to all fields you want to have as output and all data commands that come after GROUP BY. The Query Builder does take care of that for you."},{type:"hint",message:"When grouping after a multivalue field, you need to FLATTEN it first, so that every single value of the multivalue field becomes its own group."}]}]},{question:"Do you want every result, or just the first few matches?",subtitle:"Set a limit",answers:[{label:"Show me everything",dataview:""},{label:"Show me only the first few matching results",dataview:"LIMIT {{numberOfResults}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#limit",extras:[{type:"input",label:"Limit count",varname:"numberOfResults"}]}]},{question:"Do you want to see an additional information alongside your file links on your LIST?",condition:"LIST -GROUP",appendix:"0",subtitle:"Additional List Field",answers:[{label:"No, I only want to see my file links",dataview:"",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list"},{label:"Show a meta data value alongside the file links",dataview:"{{listfield}}",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#list",extras:[{type:"input",variabletype:"metadata",label:"Meta data to output",varname:"listfield"}]}]},{question:"Do you want to see an additional information alongside your groups on your LIST?",condition:"LIST GROUP",appendix:"0",subtitle:"Additional List Field",answers:[{label:"No, I only want to see my groups",dataview:"",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"},{label:"I want to see all note links belonging to this group",dataview:"file.link",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"},{label:"I want to see all note names belonging to this group",dataview:"file.name",readmore:"https://blacksmithgu.github.io/obsidian-dataview/queries/data-commands/#group-by"}]}];function Ga(r){const o={mandatory:[],forbidden:[]};return!r||r.trim()===""||r.split(" ").forEach(s=>{let u="mandatory";s=s.trim(),s.startsWith("-")&&(u="forbidden",s=s.substring(1));const l=s.includes("~")?s.split("~"):s;o[u].push(l)}),o}function U(r,o){if(!o)return!0;const i=Ga(o),s=r.reduce((l,h)=>`${l} ${h}`,"");for(let l=0;l<i.forbidden.length;l++)if(u(i.forbidden[l]))return!1;for(let l=0;l<i.mandatory.length;l++)u(i.mandatory[l])&&(i.mandatory.splice(l,1),l--);return i.mandatory.length===0;function u(l){let h=!1;return Array.isArray(l)?h=l.some(c=>s.includes(c)):h=s.includes(l),h}}function Ke(r,o=!0){if(!r.selected)return r;if(r.appendix&&o)return r.selected.dataview="",r;if(!r.selected.variables)return r;const i=r.selected.rawDataview.matchAll(/{{([^}]+)?}}/g);let s=r.selected.rawDataview;for(const u of i){const l=r.selected.variables[u[1]];l&&(s=s.replace(u[0],l))}return r.selected.dataview=s,r}function Fa(r){if(!r.selected||!r.selected.appendixDataviews)return r;let o=r.selected.dataview;return r.selected.appendixDataviews&&r.selected.appendixDataviews.forEach(i=>{i&&(o+=" "+i)}),r.selected.dataview=o,r}function Na(r,o){r&&r.forEach((i,s)=>{var l;if(!i.appendix||!i.selected)return;const u=Ve(i,s);if(i.condition&&!U(o,i.condition)){(l=r[u].selected)!=null&&l.appendixDataviews&&(r[u].selected.appendixDataviews[s]=null);return}Ke(i,!1),r[u].selected&&(r[u].selected.appendixDataviews||(r[u].selected.appendixDataviews=[]),r[u].selected.appendixDataviews[s]=i.selected.dataview)})}function Ve(r,o){if(!(r!=null&&r.appendix))return o;let i;if(r.appendix.startsWith(".")){const s=Number(r.appendix.substring(1));i=o+s}else i=Number(r.appendix);return i}function Qa(r){let o;if(r.forEach((s,u)=>{var l;(l=s.selected)!=null&&l.dataview.includes("GROUP BY")&&(o=u)}),!o)return;i(r[0]);for(let s=o+1;s<r.length;s++)i(r[s]);function i(s){if(!s.selected)return;const u=s.selected.dataview.split(","),l=u[0].split(" ")[0];if(u[0]=u[0].replace(l,""),l==="LIMIT")return;const h=[];for(let c=0;c<u.length;c++){u[c]=u[c].trim();const T=u[c]&&!u[c].startsWith("rows.")?"rows.":"";h.push(T+u[c])}s.selected.dataview=l+h.reduce((c,T)=>`${c}${c?",":""} ${T}`,"")}}const qa=_a("questionsStore",{state:()=>({questions:Ea,currentQuestionIndex:0}),getters:{currentQuestion:r=>r.questions[r.currentQuestionIndex],queryParts:r=>r.questions.filter(o=>{var i;return(i=o.selected)==null?void 0:i.dataview}).map(o=>{var i;return(i=o.selected)==null?void 0:i.dataview}),questionsLength:r=>r.questions.length,isLastQuestion:r=>{var i;if(!r.questions)return!1;if(r.currentQuestionIndex+1===r.questionsLength)return!0;let o=r.currentQuestionIndex;for(;o<r.questionsLength-1&&!U(r.queryParts,(i=r.questions[o])==null?void 0:i.condition);)o++;return o+1===r.questionsLength},computedQueryParts:r=>{const o=Ca(r.questions);Na(o,r.queryParts);const i=o.map(s=>Ke(s)).map(s=>Fa(s));return Qa(i),i.map(s=>{var u;return((u=s.selected)==null?void 0:u.dataview)||""})},computedQuery:r=>r.computedQueryParts.reduce((o,i)=>i?`${o}${o?`
`:""}${i}`:o,"")},actions:{moveForward(){var o;let r=this.currentQuestionIndex+1;for(;!U(this.queryParts,(o=this.questions[r])==null?void 0:o.condition);)r++;return r<this.questionsLength?(this.currentQuestionIndex=r,!0):!1},moveBack(){if(this.currentQuestionIndex===0)return;let r=this.currentQuestionIndex-1;for(;!U(this.queryParts,this.questions[r].condition);)r--;this.currentQuestionIndex=r},resetAppState(){this.questions.forEach(r=>r.selected=void 0),this.currentQuestionIndex=0},setSelected(r,o,i){r.selected={index:o,answer:i,dataview:i.dataview,rawDataview:i.dataview}},updateAnswerVariableMap(r,o,i){var s;r.selected||console.error("Cannot update variable map for non existing selected answer",r),(s=r.selected)!=null&&s.variables||(r.selected.variables={}),r.selected.variables[o]=i}}}),Da={props:{showHighlight:String},computed:{...xa(qa,["queryParts","computedQuery","computedQueryParts","currentQuestionIndex","currentQuestion"]),queryString(){return`\`\`\`dataview
${this.computedQuery.trim()}
\`\`\``},queryParts(){return this.showHighlight?this.computedQueryParts:this.computedQueryParts.filter(r=>r)},activeIndex(){return Ve(this.currentQuestion,this.currentQuestionIndex)}},methods:{copyQuery(){navigator.clipboard.writeText(this.queryString)}}},ie=r=>(Sa("data-v-32c4a56f"),r=r(),Pa(),r),La={class:"dataview-query"},ja=ie(()=>R("span",{class:"icon"},[R("i",{class:"fa-regular fa-copy"})],-1)),Ma=[ja],Ua=ie(()=>R("p",null,"```dataview",-1)),Ya=ie(()=>R("p",null,"```",-1));function Ha(r,o,i,s,u,l){return j(),L("div",La,[R("button",{class:"button is-ghost copybtn",title:"Copy Query",onClick:o[0]||(o[0]=h=>l.copyQuery())},Ma),Ua,(j(!0),L(We,null,Oa(l.queryParts,(h,c)=>(j(),L(We,{key:c},[h?(j(),L("p",{key:0,class:Aa({active:l.activeIndex===c&&i.showHighlight})},Ia(h),3)):ka("",!0)],64))),128)),Ya])}const Wa=Ta(Da,[["render",Ha],["__scopeId","data-v-32c4a56f"]]);export{Wa as D,qa as u};
